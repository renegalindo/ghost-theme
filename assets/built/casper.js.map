{"version":3,"sources":["external-links.js","gallery-card.js","no-click-non-touch.js","shuffle.js"],"names":["document","querySelectorAll","forEach","e","href","startsWith","window","origin","target","rel","addEventListener","image","container","closest","ratio","attributes","width","value","height","style","flex","matchMedia","matches","querySelector","event","preventDefault","getRandom","min","max","Math","floor","random","shuffler","getElementById","contentApiKey","tag","URLSearchParams","location","search","get","dataset","currentPost","post","filter","encodeURIComponent","posts","fetch","then","response","json","length","url","classList","remove","console","log"],"mappings":"AACAA,SAAAC,iBAAA,KAAAC,QAAA,SAAAC,GACAA,EAAAC,OAAAD,EAAAC,KAAAC,WAAAC,OAAAC,UAIAJ,EAAAK,OAAA,SACAL,EAAAM,IAAA,yBCGA,SAAAT,GAYAA,EAAAU,iBAAA,mBAXA,WACAV,EAAAC,iBAAA,yBACAC,QAAA,SAAAS,GACA,IAAAC,EAAAD,EAAAE,QAAA,qBAGAC,EAFAH,EAAAI,WAAAC,MAAAC,MACAN,EAAAI,WAAAG,OAAAD,MAEAL,EAAAO,MAAAC,KAAAN,EAAA,YARA,EAaAR,OAAAN,WCrBAM,OAAAe,WAAA,mBAAAC,SACAtB,SAAAuB,cAAA,cAAAb,iBAAA,QAAAc,IACAA,EAAAC,mBCJA,MAAAC,UAAA,CAAAC,EAAAC,IAAAC,KAAAC,MAAAD,KAAAE,SAAAH,EAAAD,IACA,UACA,MAAAK,EAAAhC,SAAAiC,eAAA,YAEA,GAAAD,EAIA,GAAA1B,OAAA4B,cAAA,CAKA,IAAAC,EAAA,IAAAC,gBAAAC,SAAAC,QAAAC,IAAA,QAAAP,EAAAQ,QAAAL,IACA/B,EAAA+B,EAAA,QAAAA,EAAA,GACAM,EAAAT,EAAAQ,QAAAE,KACA,IAAAC,EAAA,QAAAR,GAAA,oBACAQ,EAAAF,EAAA,OAAAA,EAAA,IAAAE,EAAA,GACAA,EAAAC,mBAAAD,GACA,GAAA,CAAAE,MAAAA,SAAAC,MAAA,yDAAAH,EAAA,QAAArC,OAAA4B,eACAa,KAAAC,GAAAA,EAAAC,QAEAP,EAAAG,EAAAnB,UAAA,EAAAmB,EAAAK,SAEAlB,EAAA5B,KAAAsC,EAAAS,IAAA/C,EACA4B,EAAAoB,UAAAC,OAAA,iBAhBAC,QAAAC,IAAA,+EARA","file":"casper.js","sourcesContent":["(function () {\n  document.querySelectorAll('a').forEach(function (e) {\n    if (!e.href || e.href.startsWith(window.origin)) {\n      return;\n    }\n\n    e.target=\"_blank\";\n    e.rel='noopener noreferrer';\n  });\n})();","/* eslint-env browser */\n\n/**\n * Gallery card support\n * Used on any individual post/page\n *\n * Detects when a gallery card has been used and applies sizing to make sure\n * the display matches what is seen in the editor.\n */\n\n(function (window, document) {\n    var resizeImagesInGalleries = function resizeImagesInGalleries() {\n        var images = document.querySelectorAll('.kg-gallery-image img');\n        images.forEach(function (image) {\n            var container = image.closest('.kg-gallery-image');\n            var width = image.attributes.width.value;\n            var height = image.attributes.height.value;\n            var ratio = width / height;\n            container.style.flex = ratio + ' 1 0%';\n        });\n    };\n\n    document.addEventListener('DOMContentLoaded', resizeImagesInGalleries);\n})(window, document);\n","(function () {\n  // Prevent click event from toggling the checkbox and pinning the menu. Hovering will still open it.\n  if (window.matchMedia('(pointer: fine)').matches) {\n    document.querySelector('.menu-icon').addEventListener('click', event => {\n      event.preventDefault();\n    });\n  }\n})()","const getRandom = (min, max) => Math.floor(Math.random() * max + min);\n(async () => {\n  const shuffler = document.getElementById('shuffler');\n\n  if (!shuffler) {\n    return;\n  }\n\n  if (!window.contentApiKey) {\n    console.log('Error! No content API key was supplied. Shuffle posts button will not work');\n    return;\n  }\n\n  const tag = new URLSearchParams(location.search).get('tag') || shuffler.dataset.tag;\n  const href = tag ? '?tag=' + tag : '';\n  const currentPost = shuffler.dataset.post;\n  let filter = 'tag:' + (tag || '-hash-newsletter');\n  filter = currentPost ? ('id:-' + currentPost + '+' + filter) : '';\n  filter = encodeURIComponent(filter)\n  const {posts} = await fetch('/ghost/api/content/posts/?limit=all&fields=url&filter=' + filter + '&key=' + window.contentApiKey)\n  .then(response => response.json());\n\n  const post = posts[getRandom(0, posts.length)];\n\n  shuffler.href = post.url + href;\n  shuffler.classList.remove('disabled');\n})()"]}
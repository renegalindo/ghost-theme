{"version":3,"sources":["gallery-card.js","shuffle.js"],"names":["document","addEventListener","querySelectorAll","forEach","image","container","closest","ratio","attributes","width","value","height","style","flex","window","getRandom","min","max","Math","floor","random","shuffler","getElementById","post","contentApiKey","posts","fetch","then","response","json","length","href","url","classList","remove","console","log"],"mappings":"CAUA,SAAAA,GAYAA,EAAAC,iBAAA,mBAXA,WACAD,EAAAE,iBAAA,yBACAC,QAAA,SAAAC,GACA,IAAAC,EAAAD,EAAAE,QAAA,qBAGAC,EAFAH,EAAAI,WAAAC,MAAAC,MACAN,EAAAI,WAAAG,OAAAD,MAEAL,EAAAO,MAAAC,KAAAN,EAAA,YARA,EAaAO,OAAAd,WCvBA,MAAAe,UAAA,CAAAC,EAAAC,IAAAC,KAAAC,MAAAD,KAAAE,SAAAH,EAAAD,IACA,UACA,MAAAK,EAAArB,SAAAsB,eAAA,YAEA,IAaAC,EAbAF,IAIAP,OAAAU,eAKA,CAAAC,MAAAA,SAAAC,MAAA,qFAAAF,eACAG,KAAAC,GAAAA,EAAAC,QAGAN,EAAAE,EAAAV,UAAA,EAAAU,EAAAK,SAEAT,EAAAU,KAAAR,EAAAS,IACAX,EAAAY,UAAAC,OAAA,aAXAC,QAAAC,IAAA,gFARA","file":"casper.js","sourcesContent":["/* eslint-env browser */\n\n/**\n * Gallery card support\n * Used on any individual post/page\n *\n * Detects when a gallery card has been used and applies sizing to make sure\n * the display matches what is seen in the editor.\n */\n\n(function (window, document) {\n    var resizeImagesInGalleries = function resizeImagesInGalleries() {\n        var images = document.querySelectorAll('.kg-gallery-image img');\n        images.forEach(function (image) {\n            var container = image.closest('.kg-gallery-image');\n            var width = image.attributes.width.value;\n            var height = image.attributes.height.value;\n            var ratio = width / height;\n            container.style.flex = ratio + ' 1 0%';\n        });\n    };\n\n    document.addEventListener('DOMContentLoaded', resizeImagesInGalleries);\n})(window, document);\n","const getRandom = (min, max) => Math.floor(Math.random() * max + min);\n(async () => {\n  const shuffler = document.getElementById('shuffler');\n\n  if (!shuffler) {\n    return;\n  }\n\n  if (!window.contentApiKey) {\n    console.log('Error! No content API key was supplied. Shuffle posts button will not work');\n    return;\n  }\n\n  const {posts} = await fetch('/ghost/api/v3/content/posts/?limit=all&fields=url&filter=tag:-hash-newsletter&key=' + contentApiKey)\n  .then(response => response.json());\n\n  debugger;\n  const post = posts[getRandom(0, posts.length)];\n\n  shuffler.href = post.url;\n  shuffler.classList.remove('disabled');\n})()"]}